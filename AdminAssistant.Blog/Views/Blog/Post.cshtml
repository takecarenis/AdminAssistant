@using AdminAssistant.Blog.Models.DomainModel
@model PostViewModel

    <section class="blog-area">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 col-md-12">
                    <div class="blog-posts">
                        <div class="single-post" style="margin-top: 30px">
                            @if (!string.IsNullOrEmpty(Model.PictureUrl))
                            {
                                <div class="image-wrapper"><img src="@Model.PictureUrl" alt="@Model.Title"></div>

                                <div class="icons">
                                    <div class="left-area">
                                        <p class="date"><em>@Model.Date.ToString("dd/MM/yyyy")</em></p>
                                    </div>
                                    <ul class="right-area">
                                        @foreach (var category in Model.Categories)
                                        {
                                            <a href="/Blog/PostByCategory?category=@category.Id" target="_blank" class="btn btn-sm btn-primary" style="margin-bottom: 10px;">@category.Name</a>
                                        }
                                    </ul>
                                </div>
                                <hr />

                                <h3 class="title"><a href="/Blog/Post?id=@Model.Id"><b class="light-color">@Model.Title</b></a></h3>
                            }
                            else
                            {
                                <h3 class="title"><a href="/Blog/Post?id=@Model.Id"><b class="light-color">@Model.Title</b></a></h3>
                                <div class="icons">
                                    <div class="left-area">
                                        <p class="date"><em>@Model.Date.ToString("dd/MM/yyyy")</em></p>
                                    </div>
                                    <ul class="right-area">
                                        @foreach (var category in Model.Categories)
                                        {
                                            <a href="/Blog/PostByCategory?category=@category.Id" target="_blank" class="btn btn-sm btn-primary" style="margin-bottom: 10px;">@category.Name</a>
                                        }
                                    </ul>
                                </div>
                                <hr />
                            }

                            @Html.Raw(Model.Body)
                            <div class="icons">
                                <div class="left-area">
                                    <h5><b>Tags: </b></h5>
                                    @foreach (var tag in Model.Tags)
                                    {
                                        <a href="#" style="margin-right: 5px;"><b style="color: rgba(92,45,145,1)">#@tag.Name</b></a>
                                    }
                                </div>

                            </div>
                            <button id="copyLink" class="btn btn-sm btn-dark" onclick="Admin.copyLink()">Copy Link</button>
                            <input type="hidden" value="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")" id="copyLinkValue" />
                            <br />
                            <br />
                            <button id="backToPreviousPage" class="btn btn-sm btn-primary" onclick="Admin.backToPreviousPage()">Back</button>
                        </div>

                    </div>
                </div>
                <div class="col-lg-4 col-md-12">
                    <div class="sidebar-area">

                        @await Component.InvokeAsync("Newsletter")
                        @await Component.InvokeAsync("LatestPost", new { category = "Article" })
                        @await Component.InvokeAsync("LatestPost", new { category = "News" })
                        @await Component.InvokeAsync("Category")
                        @await Component.InvokeAsync("Tag")

                    </div>
                </div>

            </div>
        </div>
    </section>